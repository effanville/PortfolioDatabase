<UserControl x:Class="FinancePortfolioDatabase.GUI.Windows.DataNamesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:uic="clr-namespace:Common.UI.Converters;assembly=Common.UI"
             xmlns:gui="clr-namespace:FinancePortfolioDatabase.GUI"
             xmlns:cht="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
             xmlns:common="clr-namespace:FinancePortfolioDatabase.GUI.ViewModels.Common"
             d:DataContext="{d:DesignInstance Type=common:DataNamesViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <Grid Height="Auto"
          Width="Auto"
          VerticalAlignment="Stretch"
          HorizontalAlignment="Stretch">
        <Grid.Resources>
            <gui:NameDataConverter x:Key="nameConverter" />
            <uic:StringToUKDateConverter x:Key="StringToUKDate" />
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal"
                    Height="35"
                    Grid.Row="0"
                    Grid.Column="0">
            <Button Content="Download"
                    Style="{StaticResource ResourceKey=defaultButton}"
                    Command="{Binding DownloadCommand}"
                    ToolTip="Press here to download data for selected." />
            <Button Content="Delete"
                    Style="{StaticResource ResourceKey=defaultButton}"
                    Command="{Binding DeleteCommand}"
                    ToolTip="Delete the highlighted." />
        </StackPanel>
        <DataGrid Grid.Row="1"
                  Grid.Column="0"
                  Margin="5"
                  Width="Auto"
                  HorizontalAlignment="Left"
                  ToolTip="Lists all items currently in the database. Select one to edit data."
                  SelectionUnit="FullRow"
                  SelectionMode="Single"
                  CanUserAddRows="True"
                  IsReadOnly="False"
                  CanUserDeleteRows="False"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding Path=DataNames, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto">
            <DataGrid.Resources></DataGrid.Resources>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Selected}"
                                     Value="False">
                            <Setter Property="Background"
                                    Value="#FF5555"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="BeginningEdit">
                    <i:InvokeCommandAction Command="{Binding PreEditCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="RowEditEnding">
                    <i:InvokeCommandAction Command="{Binding CreateCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="AddingNewItem">
                    <i:InvokeCommandAction Command="{Binding Path=AddDefaultDataCommand}"
                                           PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Path=SelectionChangedCommand}"
                                           CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=CurrentItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Company"
                                    MinWidth="70"
                                    Binding="{Binding Path=Instance.Company,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="Name"
                                    MinWidth="70"
                                    Binding="{Binding Path=Instance.Name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="Url"
                                    MinWidth="50"
                                    MaxWidth="250"
                                    Binding="{Binding Path=Instance.Url,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="Currency"
                                    MinWidth="20"
                                    Binding="{Binding Path=Instance.Currency,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="Sectors"
                                    MinWidth="70"
                                    Binding="{Binding Path=Instance.SectorsFlat,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel DataContext="{Binding}">
                                <Button Content="View Data"
                                        Command="{Binding Path=DataContext.OpenTabCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Notes"
                                    MinWidth="70"
                                    Binding="{Binding Path=Instance.Notes,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="1"
              Grid.Column="1"
              Visibility="{Binding Path=SelectedNameSet, Converter={StaticResource BoolToVis}}"
              Width="Auto"
              Height="Auto"
              VerticalAlignment="Stretch"
              HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <cht:Chart Title="Holding History"
                       Style="{StaticResource NoLegendChart}"
                       Height="Auto"
                       Width="Auto"
                       VerticalAlignment="Stretch"
                       Grid.Row="0"
                       Grid.RowSpan="2"
                       Grid.Column="0">
                <cht:Chart.Series>
                    <cht:LineSeries ItemsSource="{Binding Path=SelectedValueHistory}"
                                    DataPointStyle="{StaticResource InvisibleDataPointBlue}"
                                    IndependentValueBinding="{Binding Path=Day}"
                                    DependentValueBinding="{Binding Path=Value}"></cht:LineSeries>
                </cht:Chart.Series>
            </cht:Chart>
        </Grid>
    </Grid>
</UserControl>
