<UserControl x:Class="FPD.UI.Windows.Security.SelectedSecurityView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cht="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
             xmlns:fpdui="clr-namespace:FPD.UI"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:security="clr-namespace:FPD.Logic.ViewModels.Security;assembly=Effanville.FPD.Logic"
             xmlns:converters="clr-namespace:Effanville.Common.UI.Wpf.Converters;assembly=Effanville.Common.UI.Wpf"
             d:DataContext="{d:DesignInstance Type=security:SelectedSecurityViewModel}"
             Background="{Binding Styles.BackgroundBrush}"
             mc:Ignorable="d"
             d:DesignHeight="450"
             DataContextChanged="UC_DataContextChanged"
             
             d:DesignWidth="800">
    <UserControl.Resources>
        <converters:StringToUKDateConverter x:Key="StringToUKDate" />
        <fpdui:DisplayConstants x:Key="Consts" />
        <fpdui:Bridge x:Key="bridge"
                      x:Name="bridge"
                      Styles="{Binding Styles}" />
    </UserControl.Resources>
    <Grid Width="Auto">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    Orientation="Horizontal">
            <Button Content="Download"
                    Style="{StaticResource ResourceKey=defaultButton}"
                    Command="{Binding DownloadCommand}"
                    ToolTip="Press here to download data for selected." />
            <Button Content="Delete Valuation"
                    Style="{StaticResource ResourceKey=defaultButton}"
                    Command="{Binding DeleteValuationCommand}"
                    ToolTip="Deletes the security data highlighted." />
            <Button Content="Import Data"
                    Style="{StaticResource ResourceKey=defaultButton}"
                    Command="{Binding AddCsvData}"
                    ToolTip="Adds data to the selected security from a csv file." />
            <Button Content="Export Data"
                    Style="{StaticResource ResourceKey=defaultButton}"
                    Command="{Binding ExportCsvData}"
                    ToolTip="Exports data from the selected security to a csv file." />
        </StackPanel>
        <Border BorderBrush="{Binding Styles.BackgroundSecondaryBrush}"
                BorderThickness="1"
                Grid.Column="0"
                Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding TLVM}"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="0" />
                <Border BorderBrush="{Binding Styles.BackgroundSecondaryBrush}"
                        BorderThickness="1"
                        Grid.Row="0"
                        Grid.Column="1">
                    <DataGrid ItemsSource="{Binding Path=Trades, Mode=TwoWay}"
                              AutoGenerateColumns="False"
                              Grid.Row="0"
                              Grid.Column="1"
                              DataContext="{Binding}"
                              KeyDown="DataGrid_KeyDown"
                              PreviewKeyDown="DataGrid_KeyDown"
                              AddingNewItem="DataGrid_AddingNewItem">
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}"
                                   BasedOn="{StaticResource DGR_Style}">
                                <Setter Property="Background"
                                        Value="{Binding Source={StaticResource bridge}, Path=Styles.BackgroundBrush}" />
                                <Setter Property="Foreground"
                                        Value="{Binding Source={StaticResource bridge}, Path=Styles.ForegroundBrush}" />
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}"
                                   BasedOn="{StaticResource DGC_Style}">
                                <Setter Property="Foreground"
                                        Value="{Binding Source={StaticResource bridge}, Path=Styles.ForegroundBrush}" />
                                <Setter Property="Background"
                                        Value="{Binding Source={StaticResource bridge}, Path=Styles.BackgroundBrush}" />
                            </Style>
                        </DataGrid.CellStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="BeginningEdit">
                                <i:InvokeCommandAction Command="{Binding PreEditCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="RowEditEnding">
                                <i:InvokeCommandAction Command="{Binding Mode=TwoWay, Path=AddEditDataCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Mode=TwoWay, Path=SelectionChangedCommand}"
                                                       CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=CurrentItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.Columns>
                            <DataGridComboBoxColumn Header="Type"
                                                    MinWidth="50"
                                                    SelectedItemBinding="{Binding Path=TradeType, UpdateSourceTrigger=LostFocus}">
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="ComboBox.ItemsSource"
                                                Value="{Binding Source={StaticResource Consts}, Path=TradeTypes}" />
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style>
                                        <Setter Property="ComboBox.ItemsSource"
                                                Value="{Binding Source={StaticResource Consts}, Path=TradeTypes}" />
                                    </Style>
                                </DataGridComboBoxColumn.EditingElementStyle>
                            </DataGridComboBoxColumn>
                            <DataGridTextColumn Header="Date"
                                                MinWidth="50"
                                                Width="Auto"
                                                Binding="{Binding Path=Day, Converter={StaticResource StringToUKDate}, UpdateSourceTrigger=LostFocus}" />
                            <DataGridTextColumn MinWidth="50"
                                                Width="Auto"
                                                Binding="{Binding Path=UnitPrice, UpdateSourceTrigger=LostFocus}">
                                <DataGridTextColumn.Header>
                                    <TextBlock x:Name="Thing"
                                               Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, AncestorLevel=1}, Path=DataContext.TradePriceHeader }" />
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Num Shares"
                                                MinWidth="50"
                                                Width="Auto"
                                                Binding="{Binding Path=NumberShares, UpdateSourceTrigger=LostFocus}" />
                            <DataGridTextColumn Header="Trade costs"
                                                    MinWidth="50"
                                                    IsReadOnly="False"
                                                    Binding="{Binding Path=TradeCosts, UpdateSourceTrigger=LostFocus}"
                                                    Width="Auto">
                            </DataGridTextColumn>
                            <DataGridTextColumn MinWidth="50"
                                                Width="Auto"
                                                IsReadOnly="True"
                                                Binding="{Binding Path=TotalCost, UpdateSourceTrigger=LostFocus}">
                                <DataGridTextColumn.Header>
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, AncestorLevel=1}, Path=DataContext.TradeTotalCostHeader }" />
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
                <ContentControl Grid.Row="1"
                                Grid.Column="1"
                                Content="{Binding SecurityStats}" />
            </Grid>
        </Border>
        <GridSplitter Grid.Row="1"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      ShowsPreview="True"
                      Background="{Binding Styles.BackgroundSecondaryBrush}"
                      Width="5" />
        <Grid Grid.Row="1"
              Grid.Column="2"
              Grid.ColumnSpan="1"
              Grid.RowSpan="3"
              VerticalAlignment="Stretch"
              HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <cht:Chart Title="Value History"
                       Style="{StaticResource NoLegendChart}"
                       Height="Auto"
                       Width="Auto"
                       DataContext="{Binding}"
                       VerticalAlignment="Stretch"
                       Grid.Row="0"
                       Grid.Column="0"
                       Grid.RowSpan="2">
                <cht:Chart.Series>
                    <cht:LineSeries ItemsSource="{Binding Path=Values}"
                                    Background="{Binding Source={StaticResource bridge}, Path=Styles.BackgroundBrush}"
                                    DataPointStyle="{StaticResource InvisibleDataPointBlue}"
                                    IndependentValueBinding="{Binding Path=Day}"
                                    DependentValueBinding="{Binding Path=Value}"></cht:LineSeries>
                </cht:Chart.Series>
            </cht:Chart>
        </Grid>
    </Grid>
</UserControl>
